(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{303:function(t,s,n){"use strict";n.r(s);var a=n(4),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"springboot-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springboot-cli"}},[t._v("#")]),t._v(" SpringBoot CLI")]),t._v(" "),n("p",[t._v("CLI （Command Line Interface）， 一个可以帮助我们快速构建 SpringBoot 应用的命令行工具。")]),t._v(" "),n("p",[t._v("我们知道 SpringBoot 已经简化 Spring 应用中很多繁琐的配置和构建工程的步骤，然而 SpringBoot CLI 工具在这个基础上继续简化了 SpringBoot 应用程序的构建。")]),t._v(" "),n("h2",{attrs:{id:"quik-start"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#quik-start"}},[t._v("#")]),t._v(" Quik Start")]),t._v(" "),n("p",[t._v("首先需要下载 CLI，下载地址：  http://repo.spring.io/release/org/springframework/boot/spring-boot-cli/")]),t._v(" "),n("p",[t._v("我们这里选择的是 2.0.1.RELEASE 版本\nhttp://repo.spring.io/release/org/springframework/boot/spring-boot-cli/2.0.1.RELEASE/spring-boot-cli-2.0.1.RELEASE-bin.zip")]),t._v(" "),n("p",[t._v("下载完成后解压，然后将解压出来的 "),n("code",[t._v("/bin")]),t._v(" 目录添加至环境变量中\n在 "),n("code",[t._v("cmd")]),t._v(" 程序中输入 "),n("code",[t._v("spring --version")]),t._v(" 会输出")]),t._v(" "),n("blockquote",[n("p",[t._v("Spring CLI v2.0.1.RELEASE")])]),t._v(" "),n("p",[t._v("即表明安装配置成功\n然后我们写一段 Java 程序测试一下")]),t._v(" "),n("ul",[n("li",[t._v("Hello.java")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, Cli"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("将 "),n("code",[t._v("cmd")]),t._v(" 程序切换至 "),n("code",[t._v("Hello.java")]),t._v(" 文件所在目录下执行 "),n("code",[t._v("spring run Hello.java")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://i.loli.net/2019/12/10/h68bpEuskmZGiP1.png",alt:""}})]),t._v(" "),n("p",[t._v("SpringBoot CLI 在这时会构建并启动程序，启动完成后，访问 http://127.0.0.1:8080/hello")]),t._v(" "),n("blockquote",[n("p",[t._v("Hello, Cli")])]),t._v(" "),n("p",[t._v("到这里我们的测试就已经通过了")])])}),[],!1,null,null,null);s.default=r.exports}}]);